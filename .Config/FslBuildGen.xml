<?xml version="1.0" encoding="UTF-8"?>
<FslBuildGenConfig Version="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="FslBuildGenConfig.xsd">
  <GenFile Name="Fsl.gen"/>
  <TemplateFolder Name="$(FSL_GRAPHICS_SDK)/.Config/Templates.gen"/>
  <AddRootDirectory Name="$(FSL_GRAPHICS_SDK)"/>
  <AddTemplateImportDirectory Name="$(FSL_GRAPHICS_SDK)/.Config/Import.gen"/>
  <PackageConfiguration Name="default">
    <!-- ThirdParty -->
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/ThirdParty"/>
    <!-- Framework packages -->
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoFramework"/>
    <!-- DemoApp shared libs -->
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/Shared"/>
  </PackageConfiguration>
  <PackageConfiguration Name="sdk">
    <!-- ThirdParty -->
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/ThirdParty"/>
    <!-- Framework packages -->
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoFramework"/>
    <!-- App packages packages -->
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/Console"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/G2D"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/GLES2"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/GLES3"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/OpenCL"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/OpenCV"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/OpenVG"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/OpenVX"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/Vulkan"/>
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/Window"/>
    <!-- DemoApp shared libs -->
    <PackageLocation Name="$(FSL_GRAPHICS_SDK)/DemoApps/Shared"/>
  </PackageConfiguration>
  <ContentBuilderConfiguration>
    <!-- 
        FeatureRequirements can contain a 'python' like condition statement where the 
        feature names will evaluate to true or false depending on if they are present or not.
    -->
    <ContentBuilder Name="VulkanShaderCompiler" Executable="glslangValidator" Parameters="-t -o $(OutputFileName) -V $(InputFileName)" FeatureRequirements="Vulkan" Description="Vulkan shader compiler used to convert GLSL/HLSL shaders to binary SPIR-V files">
      <AddExtension Name="vert" Description="vertex shader" PostfixedOutputExtension=".spv"/>
      <AddExtension Name="tesc" Description="tessellation control shader" PostfixedOutputExtension=".spv"/>
      <AddExtension Name="tese" Description="tessellation evaluation shader" PostfixedOutputExtension=".spv"/>
      <AddExtension Name="geom" Description="geometry shader" PostfixedOutputExtension=".spv"/>
      <AddExtension Name="frag" Description="fragment shader" PostfixedOutputExtension=".spv"/>
      <AddExtension Name="comp" Description="compute shader" PostfixedOutputExtension=".spv"/>
    </ContentBuilder>
    <ContentBuilder Name="VivanteShaderCompiler" Executable="vCompiler" Parameters="-v -o $(OutputFileName) $(InputFileName)" FeatureRequirements="OpenGLES2 or OpenGLES3" Description="Vivante shader compiler used to compile GLSL shaders to binary files">
      <AddExtension Name="vert" Description="vertex shader"/>
      <AddExtension Name="frag" Description="fragment shader"/>
    </ContentBuilder>
  </ContentBuilderConfiguration>
</FslBuildGenConfig>
